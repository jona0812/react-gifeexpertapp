{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","proptTypes","ProptTypes","func","isRequired","getGifs","category","a","urlGetData","encodeURI","fetch","getData","json","data","gifs","map","img","id","title","image","images","downsized","url","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGif","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAIaA,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KAqBA,OAEI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAzBa,SAACP,GAEtBF,EAAcE,EAAEQ,OAAOF,aA8B/BZ,EAAYe,WAAW,CACnBd,cAAee,IAAWC,KAAKC,Y,2CCzCtBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FACkFC,UAAUH,GAD5F,sBAEEI,MAAMF,GAFR,cAEbG,EAFa,gBAGCA,EAAQC,OAHT,uBAGZC,EAHY,EAGZA,KAEDC,EAAMD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAEzB,MAAM,CAEFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,MAAK,UAAEH,EAAII,cAAN,aAAE,EAAYC,UAAUC,QAIrCC,QAAQC,IAAIV,GAfO,kBAiBZA,GAjBY,4CAAH,sDCGPW,EAAc,SAAC,GAAyB,EAAvBR,GAAwB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAErC,OADAI,QAAQC,IAAKL,GAET,sBAAKO,UAAU,yCAAf,UACI,qBAAKC,IAAMR,EAAQS,IAAKV,IACxB,4BAAIA,QCHHW,EAAU,SAAC,GAAoB,IAAjBvB,EAAgB,EAAhBA,SAIvB,ECJuB,SAAEA,GAEzB,MAAwBlB,mBAAS,CAC7ByB,KAAK,GACLiB,SAAS,IAFb,mBAAOC,EAAP,KAAaC,EAAb,KAmBA,OAdAC,qBAAW,WACP5B,EAASC,GACI4B,MAAM,SAAAlB,GAEHgB,EAAU,CACNnB,KAAKG,EACLc,SAAS,SAI/B,CAACxB,IAIIyB,EDjBsBI,CAAa7B,GAA9Bc,EAAZ,EAAOP,KAAYiB,EAAnB,EAAmBA,QAYnB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDpB,IAEjDwB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEd,qBAAKA,UAAU,YAAf,SAEKN,EAAOL,KAAK,SAAAC,GAAG,OAER,wBAAC,EAAD,2BACIA,GADJ,IAEIoB,IAAKpB,EAAIC,eE5BxBoB,EAAe,WAIxB,MAAkCjD,mBAAS,CAAC,cAA5C,mBAAOkD,EAAP,KAAmBnD,EAAnB,KAQA,OACI,qCAEI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQmD,EAAWvB,KAAK,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEGA,SAAYA,GADLA,Y,MCxBnCiC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.42a9af56.chunk.js","sourcesContent":["import React,{ useState } from 'react';\r\n\r\nimport ProptTypes from 'prop-types';\r\n\r\nexport const AddCategory= ( {setCategories} ) =>{\r\n\r\n    const [inputValue, setInputValue]=useState('');\r\n\r\n    const handleInputChange= (e) => {\r\n\r\n        setInputValue(e.target.value);\r\n        // setCategories(cate => [...cate, e.target.value])\r\n        \r\n        // console.log(setCategories, \"desde la funcion handleInputchange\");\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if ( inputValue.trim().length > 2 ) {\r\n\r\n            setCategories(cate => [inputValue, ...cate])\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return(\r\n        \r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange  }\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.proptTypes={\r\n    setCategories: ProptTypes.func.isRequired\r\n}","export const getGifs = async( category ) => {\r\n    const urlGetData= `https://api.giphy.com/v1/gifs/search?api_key=3IeY0SQkvE9rRr1Rx16HXLZRMPpEVym4&q=${encodeURI(category)}&limit=10`;\r\n    const getData= await fetch(urlGetData);\r\n    const {data}= await getData.json();\r\n\r\n    const gifs= data.map( img => {\r\n\r\n        return{\r\n        \r\n            id: img.id,\r\n            title: img.title,\r\n            image: img.images?.downsized.url \r\n        }\r\n    })\r\n\r\n    console.log(gifs);\r\n\r\n    return gifs;\r\n    \r\n\r\n}","import React from 'react';\r\n\r\n\r\nexport const GifGridItem = ( {id, title, image} ) => {\r\n    console.log( image )\r\n    return(\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ image } alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useFetchGif } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    // const [images, setImages] = useState([]);    \r\n\r\n    const {data:images,loading} =useFetchGif( category );\r\n\r\n    // console.log(data)\r\n\r\n    // useEffect( () => {\r\n        \r\n    //     getGifs(category)\r\n    //             .then( setImages )\r\n    //         // .then( img => setImages( img )) esto es lo mismo de arriba, pero arriba est√° optimizado;\r\n    // },[ category ])\r\n    // const [contador,setContador] =useState(0);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category}</h3>   \r\n              \r\n              {loading && <p className=\"animate__animated animate__flash\" >Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {images.map( img => (\r\n\r\n                        <GifGridItem \r\n                        {...img}\r\n                            key={img.id}\r\n                        />\r\n\r\n                ))}\r\n            \r\n            </div>\r\n        </>\r\n\r\n    ) \r\n\r\n}","import { useState } from \"react\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGif = ( category ) => {\r\n\r\n    const [state,setState] =useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n                    .then( img => {\r\n\r\n                        setState( { \r\n                            data:img,\r\n                            loading: false\r\n                        } )\r\n                        \r\n                    })\r\n    },[category])\r\n\r\n\r\n\r\n    return state;\r\n}","\r\nimport React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ( ) =>{\r\n\r\n    // const categories= ['One Punch','Samurai X','Dragon Ball'];\r\n    // useState \r\n    const [categories, setCategories]=useState(['One Punch'])\r\n\r\n    // const handleAdd= () =>{\r\n    //     const otroValor='Hoolk';\r\n    //     // setCategories(categories.concat(otroValor));\r\n    //     // setCategories(['New value', ...categories])\r\n    //     setCategories( cate => [...cate , 'Un nuevo valor']);\r\n    // }\r\n    return(\r\n        <>\r\n            \r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                         <GifGrid \r\n                            key= { category }\r\n                            category= { category }\r\n                         />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n  \r\n} ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}